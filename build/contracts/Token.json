{
  "contractName": "Token",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"DaiFi\",\"methods\":{},\"title\":\"Token Library\"},\"userdoc\":{\"methods\":{},\"notice\":\"Library for accessing supported Tokens \"}},\"settings\":{\"compilationTarget\":{\"/mnt/c/Users/Gareth/Documents/GitHub/DaiFi/contracts/lib/Token.sol\":\"Token\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/c/Users/Gareth/Documents/GitHub/DaiFi/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x3f94813793e89cd724e66cc1318886897fb7dd84d60e23bede80e8865689128c\",\"urls\":[\"bzz-raw://9824e5f0a59e7cfe47bff3fbc26ab1a1f791321214f8f6a87c7424ec63fabe08\",\"dweb:/ipfs/QmZ7YTEeQhmthDmZXhYNKJWXErkGkKTRfRRn2HyVA71sc7\"]},\"/mnt/c/Users/Gareth/Documents/GitHub/DaiFi/contracts/lib/Token.sol\":{\"keccak256\":\"0xefd604eb26fa5e57ac4feea1358f0594cb027a8105dc3651aa966c174ec68e21\",\"urls\":[\"bzz-raw://fe91994966a49a4eaa827664a7ca61c7f67d987f96a158d65321ea79e61d86cd\",\"dweb:/ipfs/QmeKkZwkbk9jjLfKR14Ab8XPLfcNuGoRXDuZiPq9Cb426a\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c3cf1f777c94f823a3a0900569d7a74d403ba2b265cc966e707b259d70a7425d64736f6c634300050c0032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c3cf1f777c94f823a3a0900569d7a74d403ba2b265cc966e707b259d70a7425d64736f6c634300050c0032",
  "sourceMap": "182:869:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "182:869:8:-;;;;;;;;",
  "source": "pragma solidity 0.5.12;\r\n\r\nimport { IERC20 } from \"../interfaces/IERC20.sol\";\r\n\r\n/**\r\n* @title Token Library\r\n* @notice Library for accessing supported Tokens \r\n* @author DaiFi\r\n*/\r\nlibrary Token {\r\n\r\n    /**\r\n    * @notice Get ERC20 token contract at given address (private pure)\r\n    * @param tokenAddress The address of the ERC20 token\r\n    * @return The ERC20 token contract\r\n    */\r\n    function getERC20(address tokenAddress) private pure returns (IERC20) {\r\n        return IERC20(tokenAddress);\r\n    }\r\n\r\n    /**\r\n    * @notice Transfer tokens from sender to recipient (internal)\r\n    * @param tokenAddress The address of the ERC20 token\r\n    * @param sender The sender of the token\r\n    * @param recipient The recipient of the token\r\n    * @param amount The amount of the token to send\r\n    * @return True if successful\r\n    */\r\n    function transferFrom(address tokenAddress, address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        return getERC20(tokenAddress).transferFrom(sender, recipient, amount);\r\n    }\r\n}\r\n",
  "sourcePath": "/mnt/c/Users/Gareth/Documents/GitHub/DaiFi/contracts/lib/Token.sol",
  "ast": {
    "absolutePath": "/mnt/c/Users/Gareth/Documents/GitHub/DaiFi/contracts/lib/Token.sol",
    "exportedSymbols": {
      "Token": [
        1018
      ]
    },
    "id": 1019,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 980,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/mnt/c/Users/Gareth/Documents/GitHub/DaiFi/contracts/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 982,
        "nodeType": "ImportDirective",
        "scope": 1019,
        "sourceUnit": 760,
        "src": "27:50:8",
        "symbolAliases": [
          {
            "foreign": 981,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Token Library\n@notice Library for accessing supported Tokens \n@author DaiFi",
        "fullyImplemented": true,
        "id": 1018,
        "linearizedBaseContracts": [
          1018
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "462:46:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 990,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "487:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 989,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "480:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$759_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$759",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 988,
                  "id": 992,
                  "nodeType": "Return",
                  "src": "473:27:8"
                }
              ]
            },
            "documentation": "@notice Get ERC20 token contract at given address (private pure)\n@param tokenAddress The address of the ERC20 token\n@return The ERC20 token contract",
            "id": 994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "410:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:22:8"
            },
            "returnParameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 987,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "454:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$759",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 986,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 759,
                    "src": "454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$759",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "453:8:8"
            },
            "scope": 1018,
            "src": "392:116:8",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "960:88:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1011,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1014:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1012,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1022:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1013,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "1033:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1008,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 996,
                            "src": "987:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1007,
                          "name": "getERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 994,
                          "src": "978:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_contract$_IERC20_$759_$",
                            "typeString": "function (address) pure returns (contract IERC20)"
                          }
                        },
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "978:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$759",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 742,
                      "src": "978:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:62:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1006,
                  "id": 1015,
                  "nodeType": "Return",
                  "src": "971:69:8"
                }
              ]
            },
            "documentation": "@notice Transfer tokens from sender to recipient (internal)\n@param tokenAddress The address of the ERC20 token\n@param sender The sender of the token\n@param recipient The recipient of the token\n@param amount The amount of the token to send\n@return True if successful",
            "id": 1017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "863:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "885:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "901:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1002,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "920:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "862:73:8"
            },
            "returnParameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "954:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "953:6:8"
            },
            "scope": 1018,
            "src": "841:207:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1019,
        "src": "182:869:8"
      }
    ],
    "src": "0:1053:8"
  },
  "legacyAST": {
    "absolutePath": "/mnt/c/Users/Gareth/Documents/GitHub/DaiFi/contracts/lib/Token.sol",
    "exportedSymbols": {
      "Token": [
        1018
      ]
    },
    "id": 1019,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 980,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/mnt/c/Users/Gareth/Documents/GitHub/DaiFi/contracts/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 982,
        "nodeType": "ImportDirective",
        "scope": 1019,
        "sourceUnit": 760,
        "src": "27:50:8",
        "symbolAliases": [
          {
            "foreign": 981,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Token Library\n@notice Library for accessing supported Tokens \n@author DaiFi",
        "fullyImplemented": true,
        "id": 1018,
        "linearizedBaseContracts": [
          1018
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "462:46:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 990,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "487:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 989,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "480:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$759_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$759",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 988,
                  "id": 992,
                  "nodeType": "Return",
                  "src": "473:27:8"
                }
              ]
            },
            "documentation": "@notice Get ERC20 token contract at given address (private pure)\n@param tokenAddress The address of the ERC20 token\n@return The ERC20 token contract",
            "id": 994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "410:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:22:8"
            },
            "returnParameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 987,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "454:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$759",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 986,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 759,
                    "src": "454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$759",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "453:8:8"
            },
            "scope": 1018,
            "src": "392:116:8",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "960:88:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1011,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1014:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1012,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1022:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1013,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "1033:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1008,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 996,
                            "src": "987:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1007,
                          "name": "getERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 994,
                          "src": "978:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_contract$_IERC20_$759_$",
                            "typeString": "function (address) pure returns (contract IERC20)"
                          }
                        },
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "978:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$759",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 742,
                      "src": "978:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:62:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1006,
                  "id": 1015,
                  "nodeType": "Return",
                  "src": "971:69:8"
                }
              ]
            },
            "documentation": "@notice Transfer tokens from sender to recipient (internal)\n@param tokenAddress The address of the ERC20 token\n@param sender The sender of the token\n@param recipient The recipient of the token\n@param amount The amount of the token to send\n@return True if successful",
            "id": 1017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "863:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "885:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "901:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1002,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "920:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "862:73:8"
            },
            "returnParameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "954:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "953:6:8"
            },
            "scope": 1018,
            "src": "841:207:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1019,
        "src": "182:869:8"
      }
    ],
    "src": "0:1053:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.17",
  "updatedAt": "2019-11-11T00:35:02.763Z",
  "devdoc": {
    "author": "DaiFi",
    "methods": {},
    "title": "Token Library"
  },
  "userdoc": {
    "methods": {},
    "notice": "Library for accessing supported Tokens "
  }
}